<html>

<body>
    <h2>
        <center> Wizdget Wand </center>
    </h2>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
    <script src="https://d3js.org/d3.v3.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/epoch-charting@0.8.4/dist/js/epoch.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/epoch-charting@0.8.4/dist/css/epoch.min.css">
    <script src="http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.6/p5.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/addons/p5.sound.js" type="text/javascript" charset="utf-8"
        async defer></script>

    <script>
        const EVENTS = {
            STATECHANGE: 'STATECHANGE', // STATE TREE state change SUCCESSFUL: 'SUCCESSFUL', // WHEN WE SUCCESSFULLY
            SUCCESSFUL: 'SUCCESSFUL', // WHEN WE SUCCESSFULLY casted a spell.
        };
        // $(function () {
        var socket = io();
        socket.on('dataToGraph', function (data) {
            myChart.push([{
                time: (new Date).getMinutes(),
                y: Number(data)
            }]);
            myGauge.push(Number(data));
        });

        socket.on(EVENTS.SUCCESSFUL, (data) => {
            console.log(data);
        });
        // });

        const radiusDecrement = 4;
        const sizeX = Number(document.documentElement.clientWidth) / 2;
        const sizeY = Number(document.documentElement.clientHeight) / 2;

        const fr = 30;
        const initialDiameter = sizeX / 2;
        const decayRate = initialDiameter / radiusDecrement; //the iterations it takes for the dimater --> 0
        let arr = [];
        let circlePatterns = [];

        let song0;
        let song1;
        let song2;
        let song3;
        let song4;
        let song5;
        let song6;
        let song7;
        let song8;
        let song9;
        let song10;
        let song11;
        let song12;
        let song13;
        let song14;
        let song15;
        let song16;
        let song17;
        let song18;
        let song19;
        let song20;
        let song21;
        let song22;
        let song23;
        let song24;
        let song25;

        function preload() {
            song0 = loadSound("/public/sounds/bubbles.mp3");
            song1 = loadSound("public/sounds/clay.mp3");
            song2 = loadSound("public/sounds/confetti.mp3");
            song3 = loadSound("public/sounds/corona.mp3");
            song4 = loadSound("public/sounds/dotted-spiral.mp3");
            song5 = loadSound("public/sounds/flash-1.mp3");
            song6 = loadSound("public/sounds/flash-2.mp3");
            song7 = loadSound("public/sounds/flash-3.mp3");
            song8 = loadSound("public/sounds/glimmer.mp3");
            song9 = loadSound("public/sounds/moon.mp3");
            song10 = loadSound("public/sounds/pinwheel.mp3");
            song11 = loadSound("public/sounds/piston-1.mp3");
            song12 = loadSound("public/sounds/piston-2.mp3");
            song13 = loadSound("public/sounds/piston-3.mp3");
            song14 = loadSound("public/sounds/prism-1.mp3");
            song15 = loadSound("public/sounds/prism-2.mp3");
            song16 = loadSound("public/sounds/prism-3.mp3");
            song17 = loadSound("public/sounds/splits.mp3");
            song18 = loadSound("public/sounds/squiggle.mp3");
            song19 = loadSound("public/sounds/strike.mp3");
            song20 = loadSound("public/sounds/suspension.mp3");
            song21 = loadSound("public/sounds/timer.mp3");
            song22 = loadSound("public/sounds/ufo.mp3");
            song23 = loadSound("public/sounds/veil.mp3");
            song24 = loadSound("public/sounds/wipe.mp3");
            song25 = loadSound("public/sounds/zig-zag.mp3");

            circlePatterns = [
                ["#6534ff", song0],
                ["#5e0231", song1],
                ["#e6af4b", song2],
                ["#e05038", song3],
                ["#334431", song4],
                ["#300032", song5],
                ["#16174f", song6],
                ["#97743a", song7],
                ["#cdd422", song8],
                ["#3fb0ac", song9],
                ["#e62739", song10],
                ["#118C4E", song11],
                ["#B71427", song12],
                ["#FF9009", song13],
                ["#b56969", song14],
                ["#33691E", song15],
                ["#ccff00", song16],
                ["#0000ff", song17],
                ["#431c5d", song18],
                ["#FFE658", song19],
                ["#005A31", song20],
                ["#4A96AD", song21],
                ["#173e43", song22],
                ["#DE1B1B", song23],
                ["#D9853B", song24],
                ["#1A237E", song25],
            ];
        }
        
        setTimeout(() => {
            console.log("Loading...")
        }, 5000);


        function setup() {
            createCanvas(sizeX, sizeY);
            frameRate(fr);
            noStroke();
        }

        function draw() {
            background("#000");
            while ((arr[0] != undefined) && (arr[0][3] <=
                    0)) {
                arr.shift();
            }
            for (let i = arr.length - 1; i >= 0; i--) {
                fill(arr[i][0]);
                arr[i][3] -= radiusDecrement;
                ellipse(arr[i][1], arr[i][2], arr[i][3]);
                textSize(arr[i][5]);
                fill("fff")
                textAlign(CENTER);
                text(arr[i][4], arr[i][1], arr[i][2]);
                arr[i][5] -= 1;
            }
        }

        // function keyPressed() {
        //     if (keyCode <= 90 && keyCode >= 65) { // let temp = [circlePatterns[keyCode - 65][0], random(sizeX-initialDiameter)+initialDiameter/2, random(sizeY-initialDiameter)+initialDiameter/,
        //         let temp = [circlePatterns[keyCode - 65][0], random(sizeX), random(sizeY), initialDiameter];
        //         arr.push(temp);
        //         circlePatterns[keyCode - 65][1].play();
        //     }

        // }
        socket.on(EVENTS.SUCCESSFUL, (data) => {
            console.log(data);
            let temp = [circlePatterns[0][0], (sizeX)/2, (sizeY)/2, initialDiameter, data.state,decayRate];
            arr.push(temp);
            circlePatterns[0][1].play();
        });
    </script>


    <script>
    </script>

</body>

</html>