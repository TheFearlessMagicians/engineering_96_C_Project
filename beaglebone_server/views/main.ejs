<html>

<body>
    <h2>
        <center> Wizdget Wand </center>
    </h2>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
    <script src="https://d3js.org/d3.v3.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/epoch-charting@0.8.4/dist/js/epoch.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/epoch-charting@0.8.4/dist/css/epoch.min.css">
    <script src="http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.6/p5.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.16/addons/p5.sound.js" type="text/javascript" charset="utf-8"
        async defer></script>

    <script>
        const EVENTS = {
            STATECHANGE: 'STATECHANGE', // STATE TREE state change SUCCESSFUL: 'SUCCESSFUL', // WHEN WE SUCCESSFULLY
            SUCCESSFUL: 'SUCCESSFUL', // WHEN WE SUCCESSFULLY casted a spell.
        };

        var socket = io('http://localhost:3000');
        socket.on('dataToGraph', function (data) {
            myChart.push([{
                time: (new Date).getMinutes(),
                y: Number(data)
            }]);
            myGauge.push(Number(data));
        });

        const radiusDecrement = 4;
        const sizeX = Number(document.documentElement.clientWidth) / 2;
        const sizeY = Number(document.documentElement.clientHeight) / 2;

        const fr = 20;
        const initialDiameter = sizeX / 2;
        const decayRate = initialDiameter / radiusDecrement; //the iterations it takes for the dimater --> 0
        let arr = [];
        let circlePatterns = [];

        let song0;
        let song1;
        let song2;
        let song3;
        let song4;
        let song5;

        function preload() {
            song0 = loadSound("/public/sounds/bubbles.mp3");
            song1 = loadSound("public/sounds/clay.mp3");
            song2 = loadSound("public/sounds/confetti.mp3");
            song3 = loadSound("public/sounds/corona.mp3");
            song4 = loadSound("public/sounds/dotted-spiral.mp3");
            song5 = loadSound("public/sounds/flash-1.mp3");

            circlePatterns = [
                ["#6534ff", song0],
                ["#5e0231", song1],
                ["#e6af4b", song2],
                ["#e05038", song3],
                ["#334431", song4],
                ["#300032", song5],
            ];
        }

        function setup() {
            createCanvas(sizeX, sizeY);
            frameRate(fr);
            noStroke();
        }

        socket.on(EVENTS.SUCCESSFUL, (data) => {
            console.log('received');
            console.log('circle patterns : '+JSON.stringify(circlePatterns));
            let temp = [circlePatterns[0][0], (sizeX) / 2, (sizeY) / 2, initialDiameter, data.state, decayRate];
            arr.push(temp);
            // circlePatterns[0][1].play();
        });


        function draw() {
            while ((arr[0] != undefined) && (arr[0][3] <= 0)) {
                arr.shift();
            }
            background("#000");
            for (let i = arr.length - 1; i >= 0; i--) {
                fill(arr[i][0]);
                arr[i][3] -= radiusDecrement;
                ellipse(arr[i][1], arr[i][2], arr[i][3]);
                textSize(arr[i][5]);
                fill("#fff")
                textAlign(CENTER);
                let str = arr[i][4] || "pending";
                text(str, arr[i][1], arr[i][2]);
                arr[i][5] -= 1;
            }
        }
    </script>


    <script>
    </script>

</body>

</html>